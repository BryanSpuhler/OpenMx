% Generated by roxygen2 (4.0.0): do not edit by hand
\name{mxComputeGradientDescent}
\alias{MxComputeGradientDescent-class}
\alias{mxComputeGradientDescent}
\title{Optimize parameters using a gradient descent optimizer}
\usage{
mxComputeGradientDescent(freeSet = NA_character_, ..., useGradient = NULL,
  engine = NULL, fitfunction = "fitfunction", verbose = 0L,
  tolerance = NA_real_)
}
\arguments{
\item{freeSet}{names of matrices containing free variables}

\item{...}{Not used.  Forces remaining arguments to be specified by name.}

\item{useGradient}{whether to use the analytic gradient (if available)}

\item{engine}{specific NPSOL or CSOLNP}

\item{fitfunction}{name of the fitfunction (defaults to 'fitfunction')}

\item{verbose}{level of debugging output}

\item{tolerance}{how close to the optimum is close enough (also known as the optimality tolerance)}
}
\description{
This optimizer does not require analytic derivatives of the fit
function. The open-source version of OpenMx only offers 1 choice,
CSOLNP (based on Ye, 1988).  The proprietary version of OpenMx
offers the choice of two optimizers, CSOLNP and NPSOL.
}
\examples{
data(demoOneFactor)
factorModel <- mxModel(name ="One Factor",
  mxMatrix(type="Full", nrow=5, ncol=1, free=FALSE, values=0.2, name="A"),
    mxMatrix(type="Symm", nrow=1, ncol=1, free=FALSE, values=1, name="L"),
    mxMatrix(type="Diag", nrow=5, ncol=5, free=TRUE, values=1, name="U"),
    mxAlgebra(expression=A \%*\% L \%*\% t(A) + U, name="R"),
  mxExpectationNormal(covariance="R", dimnames=names(demoOneFactor)),
  mxFitFunctionML(),
    mxData(observed=cov(demoOneFactor), type="cov", numObs=500),
     mxComputeSequence(steps=list(
     mxComputeGradientDescent(),
     mxComputeNumericDeriv(),
     mxComputeStandardError(),
     mxComputeHessianQuality()
    )))
factorModelFit <- mxRun(factorModel)
factorModelFit$output$conditionNumber # 29.5
}
\references{
Ye, Y. (1988). \emph{Interior algorithms for linear,
quadratic, and linearly constrained convex programming.}
(Unpublished doctoral dissertation.) Stanford University, CA.
}

